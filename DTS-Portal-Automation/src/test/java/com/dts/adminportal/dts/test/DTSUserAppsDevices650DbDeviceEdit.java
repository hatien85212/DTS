package com.dts.adminportal.dts.test;

import java.util.ArrayList;
import java.util.Hashtable;

import org.apache.commons.lang3.RandomStringUtils;
import org.testng.Assert;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;

import com.dts.adminportal.controller.HomeController;
import com.dts.adminportal.util.CreatePage;
import com.dts.adminportal.util.DTSUtil;
import com.dts.adminportal.util.TestData;

import dts.com.adminportal.model.Constant;
import dts.com.adminportal.model.DeviceEdit;
import dts.com.adminportal.model.DeviceInfo;
import dts.com.adminportal.model.DeviceList;
import dts.com.adminportal.model.Xpath;

public class DTSUserAppsDevices650DbDeviceEdit extends CreatePage{
	private HomeController home;
	
	@BeforeClass
	public void beforeTest() {
		home = new HomeController(driver, siteBase);
	}
	
	@BeforeMethod
	public void loginBeforeTest() {
		home.login(superUsername, superUserpassword);
	}
	
	/*
	 * Verify that the title of 650Db Device Edit page is generated by Company, Brand and Model Name.
	 */
	@Test
	public void TC650DbADE_01(){
		result.addLog("ID : TC650DbADE_01 : Verify that the title of 650Db Device Edit page is generated by Company, Brand and Model Name.");
		/*
		 	Pre-Condition: the
		 	 DTS user has "Add and manage authorized Products" privilege.
			1. Log into DTS portal as DTS admin
			2. Navigate to "Apps & Devices" page
			3. Select a device in apps & devices table
			4.Click "Edit Version" link
		*/
		/*
		 * PreCondition: Create new device
		 */
		// Navigate to App & Devices page
		home.click(Xpath.LINK_APP_DEVICES);
		// Click Create new device link
		home.click(DeviceList.CREATE_NEW_DEVICE);
		// Create new device
		Hashtable<String,String> data = TestData.appDeviceDraft();
		home.createNewDevice(DeviceEdit.getHash(), data);
		/*
		 * *******************************************************
		 */
		// 2. Navigate to "Apps & Devices" page
		home.click(Xpath.LINK_APP_DEVICES);
		// 3. Select a device in apps & devices table
		ArrayList<String> deviceInfo = home.selectADeviceByName(data.get("name"));
		// 4.Click "Edit Version" link
		home.click(DeviceInfo.EDIT);
		/*
		 * Verify that The title of 650Db Device Edit page is generated by Company + Brand + Model Name
		 */
		Assert.assertEquals(home.getTextByXpath(DeviceEdit.DEVICE_TILLE), deviceInfo.get(0) + " " + deviceInfo.get(1) + " " + deviceInfo.get(2));
		// Delete device
		home.click(DeviceEdit.CANCEL);
		home.doDelete(DeviceInfo.DELETE);
	}
	
	/*
	 * Verify that the "Type" combobox contains "-Select-", "App" and "Device" items
	 */
	@Test
	public void TC650DbADE_02(){
		result.addLog("ID : TC650DbADE_02 : Verify that the 'Type' combobox contains '-Select-', 'App' and 'Device' items");
		/*
		 	Pre-Condition: the DTS user has "Add and manage authorized Products" privilege.
			1. Log into DTS portal as DTS admin
			2. Navigate to "Apps & Devices" page
			3. Select a device in apps & devices table
			4.Click "Edit Version" link
			5. List out all items of "Type" combobox
		*/
		/*
		 * PreCondition: Create new device
		 */
		// Navigate to App & Devices page
		home.click(Xpath.LINK_APP_DEVICES);
		// Click Create new device link
		home.click(DeviceList.CREATE_NEW_DEVICE);
		// Create new device
		Hashtable<String,String> data = TestData.appDeviceDraft();
		home.createNewDevice(DeviceEdit.getHash(), data);
		/*
		 * *******************************************************
		 */
		// 2. Navigate to "Apps & Devices" page
		home.click(Xpath.LINK_APP_DEVICES);
		// 3. Select a device in apps & devices table 
		home.selectADeviceByName(data.get("name"));
		// 4.Click "Edit Version" link
		home.click(DeviceInfo.EDIT);
		// 5. List out all items of "Type" combobox
		ArrayList<String> options = home.getAllComboboxOption(DeviceEdit.TYPE);
		/*
		 * Veriry that The "Type" combobox contains "-Select-", "App" and "Device" items
		 */
		Assert.assertTrue(DTSUtil.containsAll(options, DeviceEdit.types));
		// Delete device
		home.click(DeviceEdit.CANCEL);
		home.doDelete(DeviceInfo.DELETE);
	}
	
	/*
	 * Verify that the "OS" combobox contains "-Select-", "Android", "iOS", "Windows Phone", "Windows", "Linux"  and "Other" items
	 */
	@Test
	public void TC650DbADE_03(){
		result.addLog("ID : TC650DbADE_03 : Verify that the 'OS' combobox contains '-Select-', 'Android', 'iOS', 'Windows Phone', 'Windows', 'Linux'  and 'Other' items");
		/*
		 	Pre-Condition: the DTS user has "Add and manage authorized Products" privilege.
			1. Log into DTS portal as DTS admin
			2. Navigate to "Apps & Devices" page
			3. Select a device in apps & devices table
			4.Click "Edit Version" link
			5. List out all items of "OS" combobox
		*/
		/*
		 * PreCondition: Create new device
		 */
		// Navigate to App & Devices page
		home.click(Xpath.LINK_APP_DEVICES);
		// Click Create new device link
		home.click(DeviceList.CREATE_NEW_DEVICE);
		// Create new device
		Hashtable<String,String> data = TestData.appDeviceDraft();
		home.createNewDevice(DeviceEdit.getHash(), data);
		/*
		 * *******************************************************
		 */
		// 2. Navigate to "Apps & Devices" page
		home.click(Xpath.LINK_APP_DEVICES);
		// 3. Select a device in apps & devices table 
		home.selectADeviceByName(data.get("name"));
		// 4.Click "Edit Version" link
		home.click(DeviceInfo.EDIT);
		// 5. List out all items of "OS" combobox
		ArrayList<String> options = home.getAllOptionsInDropDown(DeviceEdit.OS);
		/*
		 * Verify that The "OS" combobox contains "-Select-", "Android", "iOS", "Windows Phone", "Windows", "Linux"  and "Other" items
		 */
		Assert.assertTrue(DTSUtil.containsAll(options, DeviceEdit.os));
		// Delete device
		home.click(DeviceEdit.CANCEL);
		home.doDelete(DeviceInfo.DELETE);
	}
	
	/*
	 * Verify that the "Audio Routes" combobox contains items properly.
	 */
	@Test
	public void TC650DbADE_04(){
		result.addLog("ID : TC650DbADE_04 : Verify that the 'Audio Routes' combobox contains items properly.");
		/*
		 	Pre-Condition: the DTS user has "Add and manage authorized Products" privilege.
			1. Log into DTS portal as DTS admin
			2. Navigate to "Apps & Devices" page
			3. Select a device in apps & devices table
			4.Click "Edit Version" link
			5. List out all items of "Audio Route" combobox in Custom Tuing module
		*/
		/*
		 * PreCondition: Create new device
		 */
		// Navigate to App & Devices page
		home.click(Xpath.LINK_APP_DEVICES);
		// Click Create new device link
		home.click(DeviceList.CREATE_NEW_DEVICE);
		// Create new device
		Hashtable<String,String> data = TestData.appDeviceDraft();
		home.createNewDevice(DeviceEdit.getHash(), data);
		/*
		 * *******************************************************
		 */
		// 2. Navigate to "Apps & Devices" page
		home.click(Xpath.LINK_APP_DEVICES);
		// 3. Select a device in apps & devices table 
		home.selectADeviceByName(data.get("name"));
		// 4.Click "Edit Version" link
		home.click(DeviceInfo.EDIT);
		// 5. List out all items of "Audio Route" combobox in Custom Tuing module
		home.clickOptionByIndex(DeviceEdit.AUDIO_ROUTE_TYPE, 1);
		ArrayList<String> audioRoutes = home.getAllComboboxOption(DeviceEdit.AUDIO_ROUTE_TYPE);
		ArrayList<String> standardAccessories = home.getAllComboboxOption(DeviceEdit.AUDIO_ROUTE);
		/*
		 * Verify that the 'Audio Routes' combobox contains items properly
		 */
		Assert.assertTrue(DTSUtil.containsAll(audioRoutes, DeviceEdit.routes));
		Assert.assertTrue(DTSUtil.containsAll(standardAccessories, DeviceEdit.Standard_Accessories));
		// Delete device
		home.click(DeviceEdit.CANCEL);
		home.doDelete(DeviceInfo.DELETE);
	}
	
	/*
	Verify that the invalid "Default Audio Route" file could not be uploaded.
	 */
	@Test
	public void TC650DbADE_05(){
		result.addLog("ID : TC650DbADE_05 : Verify that the invalid 'Default Audio Route' file could not be uploaded.");
		/*
		 	Pre-Condition: the DTS user has "Add and manage authorized Products" privilege.
			1. Log into DTS portal as DTS admin
			2. Navigate to "Apps & Devices" page
			3. Select a device in apps & devices table
			4.Click "Edit Version" link
			5. Delete the existing audio route file
			6. Try to upload invalid audio route tuning file in "Default Audio Route" module.
		*/
		/*
		 * PreCondition: Create new device
		 */
		// Navigate to App & Devices page
		home.click(Xpath.LINK_APP_DEVICES);
		// Click Create new device link
		home.click(DeviceList.CREATE_NEW_DEVICE);
		// Create new device
		Hashtable<String,String> data = TestData.appDeviceDraft();
		home.createNewDevice(DeviceEdit.getHash(), data);
		/*
		 * *******************************************************
		 */
		// 2. Navigate to "Apps & Devices" page
		home.click(Xpath.LINK_APP_DEVICES);
		// 3. Select a device in apps & devices table 
		home.selectADeviceByName(data.get("name"));
		// 4. Click "Edit Version" link
		home.click(DeviceInfo.EDIT);
		// 5. Delete the existing audio route file
		// 6. Try to upload invalid audio route tuning file in "Default Audio Route" module.
		home.uploadFile(DeviceEdit.ADD_DEFAULT_AUDIO_ROUTE, Constant.tuning_hpxtt);
		/*
		 * Verify that An error message is displayed and the invalid audio route tuning file is not added
		 */
		Assert.assertEquals(home.getTextByXpath(DeviceEdit.AUDIO_ROUTE_UPLOAD_MESSAGE), "! Invalid file");
		// Delete device
		home.click(DeviceEdit.CANCEL);
		home.doDelete(DeviceInfo.DELETE);
	}	
	
	/*
	 * Verify that the Default Audio Route file is limited by 1 when editing new device.
	 */
	@Test
	public void TC650DbADE_06(){
		result.addLog("ID : TC650DbADE_06 : Verify that the Default Audio Route file is limited by 1 when editing new device.");
		/*
		 	Pre-Condition: the DTS user has "Add and manage authorized Products" privilege.
			1. Log into DTS portal as DTS admin
			2. Navigate to "Apps & Devices" page
			3. Select a device in apps & devices table
			4. Click "Edit Version" link
			5. Delete the existing default audio route
			6. Select "Choose File" button in "Default Audio Route" section
			7. Upload valid audio route tuning file successfully
		*/
		/*
		 * PreCondition: Create new device
		 */
		// Navigate to App & Devices page
		home.click(Xpath.LINK_APP_DEVICES);
		// Click Create new device link
		home.click(DeviceList.CREATE_NEW_DEVICE);
		// Create new device
		Hashtable<String,String> data = TestData.appDeviceDraft();
		home.createNewDevice(DeviceEdit.getHash(), data);
		/*
		 * *******************************************************
		 */
		// 2. Navigate to "Apps & Devices" page
		home.click(Xpath.LINK_APP_DEVICES);
		// 3. Select a device in apps & devices table 
		home.selectADeviceByName(data.get("name"));
		// 4. Click "Edit Version" link
		home.click(DeviceInfo.EDIT);
		// 5. Delete the existing default audio route
		// 6. Select "Choose File" button in "Default Audio Route" section
		// 7. Upload valid audio route tuning file successfully
		home.uploadFile(DeviceEdit.ADD_DEFAULT_AUDIO_ROUTE, Constant.AUDIO_ROUTE_FILE);
		/*
		 * Verify that The Default Audio Route box is disappeared and user can not upload another audio route file
		 */
		Assert.assertFalse(home.isElementPresent(DeviceEdit.ADD_AUDIO_ROUTE_CONTAINER));
		// Delete device
		home.click(DeviceEdit.CANCEL);
		home.doDelete(DeviceInfo.DELETE);
	}	
	
	/*
	 * Verify that the delete confirmation dialog with "Delete" and "Cancel" button is displayed when deleting a default audio route file.
	 */
	@Test
	public void TC650DbADE_07(){
		result.addLog("ID : TC650DbADE_07 : Verify that the delete confirmation dialog with 'Delete' and 'Cancel' button is displayed when deleting a default audio route file.");
		/*
		 	Pre-Condition: the DTS user has "Add and manage authorized Products" privilege.
			1. Log into DTS portal as DTS admin
			2. Navigate to "Apps & Devices" page
			3. Select a device in apps & devices table
			4. Click "Edit Version" link
			5. Select "Choose File" button in "Default Audio Route" section
			6. Upload valid audio route tuning file successfully
			VP: The "Choose File" button is disappeared
			7. Click on trashcan icon to delete the uploaded file
		*/
		/*
		 * PreCondition: Create new device
		 */
		// Navigate to App & Devices page
		home.click(Xpath.LINK_APP_DEVICES);
		// Click Create new device link
		home.click(DeviceList.CREATE_NEW_DEVICE);
		// Create new device
		Hashtable<String,String> data = TestData.appDeviceDraft();
		home.createNewDevice(DeviceEdit.getHash(), data);
		/*
		 * *******************************************************
		 */
		// 2. Navigate to "Apps & Devices" page
		home.click(Xpath.LINK_APP_DEVICES);
		// 3. Select a device in apps & devices table 
		home.selectADeviceByName(data.get("name"));
		// 4.Click "Edit Version" link
		home.click(DeviceInfo.EDIT);
		// 5. Select "Choose File" button in "Default Audio Route" section
		// 6. Upload valid audio route tuning file successfully
		home.uploadFile(DeviceEdit.ADD_DEFAULT_AUDIO_ROUTE, Constant.AUDIO_ROUTE_FILE);
		/*
		 * VP: The "Choose File" button is disappeared
		 */
		Assert.assertFalse(home.isElementPresent(DeviceEdit.ADD_AUDIO_ROUTE_CONTAINER));
		// 7. Click on trashcan icon to delete the uploaded file
		home.click(DeviceEdit.DELETE_AUDIO_ROUTE_ICON);
		home.waitForElementClickable(Xpath.BTN_CONFIRMATION_DANGER);
		/*
		 * Verify that The delete confirmation dialog with "Delete" and "Cancel" button is displayed
		 */
		Assert.assertEquals(home.getTextByXpath(Xpath.BTN_CONFIRMATION_DANGER), "Delete");
		Assert.assertEquals(home.getTextByXpath(Xpath.BTN_CONFIRMATION_CANCEL), "Cancel");
		// Delete device
		home.click(Xpath.BTN_CONFIRMATION_CANCEL);
		home.click(DeviceEdit.CANCEL);
		home.doDelete(DeviceInfo.DELETE);
	}	
	
	/*
	 * Verify that the default audio route file could be deleted successfully.
	 */
	@Test
	public void TC650DbADE_08(){
		result.addLog("ID : TC650DbADE_08 : Verify that the default audio route file could be deleted successfully.");
		/*
		 	Pre-Condition: the DTS user has "Add and manage authorized Products" privilege.
			1. Log into DTS portal as DTS admin
			2. Navigate to "Apps & Devices" page
			3. Select a device in apps & devices table
			4. Click "Edit Version" link
			5. Select "Choose File" button in "Default Audio Route" section
			6. Upload valid audio route tuning file successfully
			VP: The "Choose File" button is disappeared
			7. Click on trashcan icon to delete the uploaded file
			8. Click "Delete" button in delete confirmation dialog
		*/
		/*
		 * PreCondition: Create new device
		 */
		// Navigate to App & Devices page
		home.click(Xpath.LINK_APP_DEVICES);
		// Click Create new device link
		home.click(DeviceList.CREATE_NEW_DEVICE);
		// Create new device
		Hashtable<String,String> data = TestData.appDeviceDraft();
		home.createNewDevice(DeviceEdit.getHash(), data);
		/*
		 * *******************************************************
		 */
		// 2. Navigate to "Apps & Devices" page
		home.click(Xpath.LINK_APP_DEVICES);
		// 3. Select a device in apps & devices table 
		home.selectADeviceByName(data.get("name"));
		// 4.Click "Edit Version" link
		home.click(DeviceInfo.EDIT);
		// 5. Select "Choose File" button in "Default Audio Route" section
		// 6. Upload valid audio route tuning file successfully
		home.uploadFile(DeviceEdit.ADD_DEFAULT_AUDIO_ROUTE, Constant.AUDIO_ROUTE_FILE);
		/*
		 * VP: The "Choose File" button is disappeared
		 */
		Assert.assertFalse(home.isElementPresent(DeviceEdit.ADD_AUDIO_ROUTE_CONTAINER));
		// 7. Click on trashcan icon to delete the uploaded file
		// 8. Click "Delete" button in delete confirmation dialog
		home.doDelete(DeviceEdit.DELETE_AUDIO_ROUTE_ICON);
		/*
		 * Verify that The default uploaded audio route is deleted successfully
		 */
		Assert.assertEquals(home.getTextByXpath(DeviceEdit.UPLOADED_DEFAULT_AUDIO_ROUTE), "");
		// Delete device
		home.click(DeviceEdit.CANCEL);
		home.doDelete(DeviceInfo.DELETE);
	}	
	
	/*
	 * Verify that the default audio route file is not deleted when clicking "Cancel" in delete confirmation dialog.
	 */
	@Test
	public void TC650DbADE_09(){
		result.addLog("ID : TC650DbADE_09 : Verify that the default audio route file is not deleted when clicking 'Cancel' in delete confirmation dialog.");
		/*
		 	Pre-Condition: the DTS user has "Add and manage authorized Products" privilege.
			1. Log into DTS portal as DTS admin
			2. Navigate to "Apps & Devices" page
			3. Select a device in apps & devices table
			4. Click "Edit Version" link
			5. Select "Choose File" button in "Default Audio Route" section
			6. Upload valid audio route tuning file successfully
			VP: The "Choose File" button is disappeared
			7. Click on trashcan icon to delete the uploaded file
			8. Click "Cancel" button in delete confirmation dialog
		*/
		/*
		 * PreCondition: Create new device
		 */
		// Navigate to App & Devices page
		home.click(Xpath.LINK_APP_DEVICES);
		// Click Create new device link
		home.click(DeviceList.CREATE_NEW_DEVICE);
		// Create new device
		Hashtable<String,String> data = TestData.appDeviceDraft();
		home.createNewDevice(DeviceEdit.getHash(), data);
		/*
		 * *******************************************************
		 */
		// 2. Navigate to "Apps & Devices" page
		home.click(Xpath.LINK_APP_DEVICES);
		// 3. Select a device in apps & devices table 
		home.selectADeviceByName(data.get("name"));
		// 4.Click "Edit Version" link
		home.click(DeviceInfo.EDIT);
		// 5. Select "Choose File" button in "Default Audio Route" section
		// 6. Upload valid audio route tuning file successfully
		home.uploadFile(DeviceEdit.ADD_DEFAULT_AUDIO_ROUTE, Constant.AUDIO_ROUTE_FILE);
		/*
		 * VP: The "Choose File" button is disappeared
		 */
		Assert.assertFalse(home.isElementPresent(DeviceEdit.ADD_AUDIO_ROUTE_CONTAINER));
		// 7. Click on trashcan icon to delete the uploaded file
		home.click(DeviceEdit.DELETE_AUDIO_ROUTE_ICON);
		home.waitForElementClickable(Xpath.BTN_CONFIRMATION_DANGER);
		// 8. Click "Cancel" button in delete confirmation dialog
		home.click(Xpath.BTN_CONFIRMATION_CANCEL);
		/*
		 * Verify that The default uploaded audio route is not deleted
		 */
		Assert.assertTrue(home.getTextByXpath(DeviceEdit.UPLOADED_DEFAULT_AUDIO_ROUTE).contains("Default Audio"));
		// Delete device
		home.click(DeviceEdit.CANCEL);
		home.doDelete(DeviceInfo.DELETE);
	}	
	
	/*
	 * Verify that the file upload box is displayed again after deleting default audio route
	 */
	@Test
	public void TC650DbADE_10(){
		result.addLog("ID : TC650DbADE_10 : Verify that the file upload box is displayed again after deleting default audio route");
		/*
		 	Pre-Condition: the DTS user has "Add and manage authorized Products" privilege.
			1. Log into DTS portal as DTS admin
			2. Navigate to "Apps & Devices" page
			3. Select a device in apps & devices table
			4.Click "Edit Version" link
			5. Select "Choose File" button in "Default Audio Route" section
			6. Upload valid audio route tuning file successfully
			VP: The "Choose File" button is disappeared
			7. Click on trashcan icon to delete the uploaded file successfully
		*/
		/*
		 * PreCondition: Create new device
		 */
		// Navigate to App & Devices page
		home.click(Xpath.LINK_APP_DEVICES);
		// Click Create new device link
		home.click(DeviceList.CREATE_NEW_DEVICE);
		// Create new device
		Hashtable<String,String> data = TestData.appDeviceDraft();
		home.createNewDevice(DeviceEdit.getHash(), data);
		/*
		 * *******************************************************
		 */
		// 2. Navigate to "Apps & Devices" page
		home.click(Xpath.LINK_APP_DEVICES);
		// 3. Select a device in apps & devices table 
		home.selectADeviceByName(data.get("name"));
		// 4.Click "Edit Version" link
		home.click(DeviceInfo.EDIT);
		// 5. Select "Choose File" button in "Default Audio Route" section
		// 6. Upload valid audio route tuning file successfully
		home.uploadFile(DeviceEdit.ADD_DEFAULT_AUDIO_ROUTE, Constant.AUDIO_ROUTE_FILE);
		/*
		 * VP: The "Choose File" button is disappeared
		 */
		Assert.assertFalse(home.isElementPresent(DeviceEdit.ADD_AUDIO_ROUTE_CONTAINER));
		// 7. Click on trashcan icon to delete the uploaded file successfully
		home.doDelete(DeviceEdit.DELETE_AUDIO_ROUTE_ICON);
		/*
		 * The file upload box is displayed again
		 */
		Assert.assertTrue(home.isElementPresent(DeviceEdit.ADD_AUDIO_ROUTE_CONTAINER));
		// Delete device
		home.click(DeviceEdit.CANCEL);
		home.doDelete(DeviceInfo.DELETE);
	}
	
	/*
	 * Verify that the new Default Audio Route file could be uploaded successfully after deleting the existing file.
	 */
	@Test
	public void TC650DbADE_11(){
		result.addLog("ID : TC650DbADE_11 : Verify that the new Default Audio Route file could be uploaded successfully after deleting the existing file.");
		/*
		 	Pre-Condition: the DTS user has "Add and manage authorized Products" privilege.
			1. Log into DTS portal as a DTS admin user
			2. Navigate to "Apps & Devices" page
			3. Select a device in apps & devices table
			4. Click "Edit Version" link
			5. Select "Choose File" button in "Default Audio Route" section
			6. Upload valid audio route tuning file successfully
			VP: The "Choose File" button is disappeared
			7. Click on trashcan icon to delete the uploaded file successfully
			VP: The file upload box is displayed again
			8. Try to upload another default audio route file
		*/
		/*
		 * PreCondition: Create new device
		 */
		// Navigate to App & Devices page
		home.click(Xpath.LINK_APP_DEVICES);
		// Click Create new device link
		home.click(DeviceList.CREATE_NEW_DEVICE);
		// Create new device
		Hashtable<String,String> data = TestData.appDeviceDraft();
		home.createNewDevice(DeviceEdit.getHash(), data);
		/*
		 * *******************************************************
		 */
		// 2. Navigate to "Apps & Devices" page
		home.click(Xpath.LINK_APP_DEVICES);
		// 3. Select a device in apps & devices table 
		home.selectADeviceByName(data.get("name"));
		// 4.Click "Edit Version" link
		home.click(DeviceInfo.EDIT);
		// 5. Select "Choose File" button in "Default Audio Route" section
		// 6. Upload valid audio route tuning file successfully
		home.uploadFile(DeviceEdit.ADD_DEFAULT_AUDIO_ROUTE, Constant.AUDIO_ROUTE_FILE);
		/*
		 * VP: The "Choose File" button is disappeared
		 */
		Assert.assertFalse(home.isElementPresent(DeviceEdit.ADD_AUDIO_ROUTE_CONTAINER));
		// 7. Click on trashcan icon to delete the uploaded file successfully
		home.doDelete(DeviceEdit.DELETE_AUDIO_ROUTE_ICON);
		/*
		 * VP: The file upload box is displayed again
		 */
		Assert.assertTrue(home.isElementPresent(DeviceEdit.ADD_AUDIO_ROUTE_CONTAINER));
		// 8. Try to upload another default audio route file
		home.uploadFile(DeviceEdit.ADD_DEFAULT_AUDIO_ROUTE, Constant.AUDIO_ROUTE_FILE);
		/*
		 * Verify that The new default audio route file is uploaded successfully
		 */
		Assert.assertTrue(home.getTextByXpath(DeviceEdit.UPLOADED_DEFAULT_AUDIO_ROUTE).contains("Default Audio"));
		// Delete device
		home.click(DeviceEdit.CANCEL);
		home.doDelete(DeviceInfo.DELETE);
	}	
	/*
	 * Verify that the custom uploaded tuning file is displayed above the Custom Tuning module with a delete icon after uploaded
	 */
	@Test
	public void TC650DbADE_12(){
		result.addLog("ID : TC650DbADE_12 : Verify that the custom uploaded tuning file is displayed above the Custom Tuning module with a delete icon after uploaded");
		/*
		 	Pre-Condition: the DTS user has "Add and manage authorized Products" privilege.
			1. Log into DTS portal as DTS admin
			2. Navigate to "Apps & Devices" page
			3. Select a device in apps & devices table
			4. Click "Edit Version" link
			5. Select "Choose File" button in "Custom Tuning" section
			6. Upload valid a tuning file successfully
		*/
		/*
		 * PreCondition: Create new device
		 */
		// Navigate to App & Devices page
		home.click(Xpath.LINK_APP_DEVICES);
		// Click Create new device link
		home.click(DeviceList.CREATE_NEW_DEVICE);
		// Create new device
		Hashtable<String,String> data = TestData.appDeviceDraft();
		home.createNewDevice(DeviceEdit.getHash(), data);
		/*
		 * *******************************************************
		 */
		// 2. Navigate to "Apps & Devices" page
		home.click(Xpath.LINK_APP_DEVICES);
		// 3. Select a device in apps & devices table 
		home.selectADeviceByName(data.get("name"));
		// 4.Click "Edit Version" link
		home.click(DeviceInfo.EDIT);
		// 5. Select "Choose File" button in "Custom Tuning" section
		// 6. Upload valid a tuning file successfully
		home.clickOptionByIndex(DeviceEdit.AUDIO_ROUTE_TYPE, 1);
		home.clickOptionByIndex(DeviceEdit.AUDIO_ROUTE, 1);
		home.uploadFile(DeviceEdit.ADD_CUSTOM_TUNING, Constant.AUDIO_ROUTE_FILE);
		/*
		 * Verify that The custom uploaded tuning file is displayed with a delete icon above the Custom Tuning module
		 */
		Assert.assertTrue(home.getAtribute(DeviceEdit.UPLOADED_CUSTOM_TUNNING_NAME, "href").contains(Constant.AUDIO_ROUTE_FILE.replaceAll(".dtscs", "")));
		Assert.assertTrue(home.isElementPresent(DeviceEdit.DELETE_CUSTOM_TUNNING_ICON));
		// Delete device
		home.click(DeviceEdit.CANCEL);
		home.doDelete(DeviceInfo.DELETE);
	}
	
	/*
	 * Verify that the delete confirmation dialog with "Delete" and "Cancel" buttons are displayed when deleteing custom tuning file
	 */
	@Test
	public void TC650DbADE_13(){
		result.addLog("ID : TC650DbADE_13 : Verify that the delete confirmation dialog with 'Delete' and 'Cancel' buttons are displayed when deleteing custom tuning file");
		/*
		 	Pre-Condition: the DTS user has "Add and manage authorized Products" privilege.
			1. Log into DTS portal as DTS admin
			2. Navigate to "Apps & Devices" page
			3. Select a device in apps & devices table
			4. Click "Edit Version" link
			5. Select "Choose File" button in "Custom Tuning" section
			6. Upload valid a tuning file successfully
			VP: The custom uploaded tuning file is displayed with a delete icon above the Custom Tuning module
			7. Click on trashcan icon
		*/
		/*
		 * PreCondition: Create new device
		 */
		// Navigate to App & Devices page
		home.click(Xpath.LINK_APP_DEVICES);
		// Click Create new device link
		home.click(DeviceList.CREATE_NEW_DEVICE);
		// Create new device
		Hashtable<String,String> data = TestData.appDeviceDraft();
		home.createNewDevice(DeviceEdit.getHash(), data);
		/*
		 * *******************************************************
		 */
		// 2. Navigate to "Apps & Devices" page
		home.click(Xpath.LINK_APP_DEVICES);
		// 3. Select a device in apps & devices table 
		home.selectADeviceByName(data.get("name"));
		// 4.Click "Edit Version" link
		home.click(DeviceInfo.EDIT);
		// 5. Select "Choose File" button in "Custom Tuning" section
		// 6. Upload valid a tuning file successfully
		home.clickOptionByIndex(DeviceEdit.AUDIO_ROUTE_TYPE, 1);
		home.clickOptionByIndex(DeviceEdit.AUDIO_ROUTE, 1);
		home.uploadFile(DeviceEdit.ADD_CUSTOM_TUNING, Constant.AUDIO_ROUTE_FILE);
		/*
		 * VP: The custom uploaded tuning file is displayed with a delete icon above the Custom Tuning module
		 */
		Assert.assertTrue(home.getAtribute(DeviceEdit.UPLOADED_CUSTOM_TUNNING_NAME, "href").contains(Constant.AUDIO_ROUTE_FILE.replaceAll(".dtscs", "")));
		Assert.assertTrue(home.isElementPresent(DeviceEdit.DELETE_CUSTOM_TUNNING_ICON));
		// 7. Click on trashcan icon
		home.click(DeviceEdit.DELETE_CUSTOM_TUNNING_ICON);
		home.waitForElementClickable(Xpath.BTN_CONFIRMATION_DANGER);
		/*
		 * Verify that The delete confirmation dialog with "Delete" and "Cancel" buttons are displayed
		 */
		Assert.assertEquals(home.getTextByXpath(Xpath.BTN_CONFIRMATION_DANGER), "Delete");
		Assert.assertEquals(home.getTextByXpath(Xpath.BTN_CONFIRMATION_CANCEL), "Cancel");
		// Delete device
		home.click(Xpath.BTN_CONFIRMATION_CANCEL);
		home.click(DeviceEdit.CANCEL);
		home.doDelete(DeviceInfo.DELETE);
	}
	
	/*
	 * Verify that the custom tuning file could be deleted successfully
	 */
	@Test
	public void TC650DbADE_14(){
		result.addLog("ID : TC650DbADE_14 : Verify that the custom tuning file could be deleted successfully");
		/*
		 	Pre-Condition: the DTS user has "Add and manage authorized Products" privilege.
			1. Log into DTS portal as  DTS admin user
			2. Navigate to "Apps & Devices" page
			3. Select a device in apps & devices table
			4. Click "Edit Version" link
			5. Select "Choose File" button in "Custom Tuning" section
			6. Upload valid a tuning file successfully
			VP: The custom uploaded tuning file is displayed with a delete icon above the Custom Tuning module
			7. Click on trashcan icon
			8. Click "Delete" button in delete confirmation dialog
		*/
		/*
		 * PreCondition: Create new device
		 */
		// Navigate to App & Devices page
		home.click(Xpath.LINK_APP_DEVICES);
		// Click Create new device link
		home.click(DeviceList.CREATE_NEW_DEVICE);
		// Create new device
		Hashtable<String,String> data = TestData.appDeviceDraft();
		home.createNewDevice(DeviceEdit.getHash(), data);
		/*
		 * *******************************************************
		 */
		// 2. Navigate to "Apps & Devices" page
		home.click(Xpath.LINK_APP_DEVICES);
		// 3. Select a device in apps & devices table 
		home.selectADeviceByName(data.get("name"));
		// 4.Click "Edit Version" link
		home.click(DeviceInfo.EDIT);
		// 5. Select "Choose File" button in "Custom Tuning" section
		// 6. Upload valid a tuning file successfully
		home.clickOptionByIndex(DeviceEdit.AUDIO_ROUTE_TYPE, 1);
		home.clickOptionByIndex(DeviceEdit.AUDIO_ROUTE, 1);
		home.uploadFile(DeviceEdit.ADD_CUSTOM_TUNING, Constant.AUDIO_ROUTE_FILE);
		/*
		 * VP: The custom uploaded tuning file is displayed with a delete icon above the Custom Tuning module
		 */
		Assert.assertTrue(home.getAtribute(DeviceEdit.UPLOADED_CUSTOM_TUNNING_NAME, "href").contains(Constant.AUDIO_ROUTE_FILE.replaceAll(".dtscs", "")));
		Assert.assertTrue(home.isElementPresent(DeviceEdit.DELETE_CUSTOM_TUNNING_ICON));
		// 7. Click on trashcan icon
		// 8. Click "Delete" button in delete confirmation dialog
		home.doDelete(DeviceEdit.DELETE_CUSTOM_TUNNING_ICON);
		/*
		 * Verify that The Custom tuning is deleted successfully
		 */
		Assert.assertEquals(home.getTextByXpath(DeviceEdit.ANOTHER_ROUTE), "");
		// Delete device
		home.click(DeviceEdit.CANCEL);
		home.doDelete(DeviceInfo.DELETE);
	}
	
	/*
	 * Verify that user can download custom tuning file when clicking on tuning link
	 */
	@Test
	public void TC650DbADE_15(){
		result.addLog("ID : TC650DbADE_15 : Verify that user can download custom tuning file when clicking on tuning link");
		/*
		 	Pre-Condition: the DTS user has "Add and manage authorized Products" privilege.
			1. Log into DTS portal as  DTS admin user
			2. Navigate to "Apps & Devices" page
			3. Select a device in apps & devices table
			4. Click "Edit Version" link
			5. Select "Choose File" button in "Custom Tuning" section
			6. Upload a valid tuning file successfully
			7. Click on uploaded tuning link
		*/
		/*
		 * PreCondition: Create new device
		 */
		// Navigate to App & Devices page
		home.click(Xpath.LINK_APP_DEVICES);
		// Click Create new device link
		home.click(DeviceList.CREATE_NEW_DEVICE);
		// Create new device
		Hashtable<String,String> data = TestData.appDeviceDraft();
		home.createNewDevice(DeviceEdit.getHash(), data);
		/*
		 * *******************************************************
		 */
		// 2. Navigate to "Apps & Devices" page
		home.click(Xpath.LINK_APP_DEVICES);
		// 3. Select a device in apps & devices table 
		home.selectADeviceByName(data.get("name"));
		// 4. Click "Edit Version" link
		home.click(DeviceInfo.EDIT);
		// 5. Select "Choose File" button in "Custom Tuning" section
		// 6. Upload a valid tuning file successfully
		home.clickOptionByIndex(DeviceEdit.AUDIO_ROUTE_TYPE, 1);
		home.clickOptionByIndex(DeviceEdit.AUDIO_ROUTE, 1);
		home.uploadFile(DeviceEdit.ADD_CUSTOM_TUNING, Constant.AUDIO_ROUTE_FILE);
		// 7. Click on uploaded tuning link
		Boolean isDownloaded = home.downloadFile(Constant.AUDIO_ROUTE_FILE);
		/*
		 * Verify that The download file dialog is displayed and user can download tuning file successfully
		 */
		Assert.assertTrue(isDownloaded);
		// Delete device
		home.click(DeviceEdit.CANCEL);
		home.doDelete(DeviceInfo.DELETE);
	}
	
	/*
	 * Verify that the number of "Device Promotions" field displays based on number of "Promo Slot Available"
	 */
	@Test
	public void TC650DbADE_16(){
		result.addLog("ID : TC650DbADE_16 : Verify that the number of 'Device Promotions' field displays based on number of 'Promo Slot Available'");
		/*
		 	Pre-Condition: the DTS user has "Add and manage authorized Products" privilege.
			1. Log into DTS portal as a DTS admin user
			2. Navigate to "Apps & Devices" page
			3. Select a device in apps & devices table
			4.Click "Edit Version" link
			5. Increase the number of "Promo Slot Available" to 7
		*/
		/*
		 * PreCondition: Create new device
		 */
		// Navigate to App & Devices page
		home.click(Xpath.LINK_APP_DEVICES);
		// Click Create new device link
		home.click(DeviceList.CREATE_NEW_DEVICE);
		// Create new device
		Hashtable<String,String> data = TestData.appDeviceDraft();
		home.createNewDevice(DeviceEdit.getHash(), data);
		/*
		 * *******************************************************
		 */
		// 2. Navigate to "Apps & Devices" page
		home.click(Xpath.LINK_APP_DEVICES);
		// 3. Select a device in apps & devices table 
		home.selectADeviceByName(data.get("name"));
		// 4. Click "Edit Version" link
		home.click(DeviceInfo.EDIT);
		// 5. Increase the number of "Promo Slot Available" to 7
		home.editData(DeviceEdit.PROMO_SLOT, "7");
		home.AutoItX.send("{ENTER}", false);
		/*
		 * Verify that The "Device Promotions" diplays 7 fields
		 */
		Assert.assertEquals(home.getPromotionContainerIndex(DeviceEdit.PROMOTION_CONTAINER), 7);
		// Delete device
		home.click(DeviceEdit.CANCEL);
		home.doDelete(DeviceInfo.DELETE);
	}
	
	/*
	 * Verify that the new product's information could be saved successfully.
	 */
	@Test
	public void TC650DbADE_17(){
		result.addLog("ID : TC650DbADE_17 : Verify that the new product's information could be saved successfully.");
		/*
		 	Pre-Condition: the DTS user has "Add and manage authorized Products" privilege.
			1. Log into DTS portal as  DTS admin user
			2. Navigate to "Apps & Devices" page
			3. Select a device in apps & devices table
			4.Click "Edit Version" link
			VP: The 650Db Device Edit page is displayed
			5. Change product's information
			6. Click "Save" link
		*/
		/*
		 * PreCondition: Create new device
		 */
		// Navigate to App & Devices page
		home.click(Xpath.LINK_APP_DEVICES);
		// Click Create new device link
		home.click(DeviceList.CREATE_NEW_DEVICE);
		// Create new device
		Hashtable<String,String> data = TestData.appDeviceDraft();
		home.createNewDevice(DeviceEdit.getHash(), data);
		/*
		 * *******************************************************
		 */
		// 2. Navigate to "Apps & Devices" page
		home.click(Xpath.LINK_APP_DEVICES);
		// 3. Select a device in apps & devices table 
		home.selectADeviceByName(data.get("name"));
		// 4. Click "Edit Version" link
		home.click(DeviceInfo.EDIT);
		/*
		 * VP: The 650Db Device Edit page is displayed
		 */
		Assert.assertEquals(home.existsElement(DeviceEdit.getHash()).getResult(), "Pass");
		// 5. Change product's information
		String newName = "Edit" + RandomStringUtils.randomNumeric(6);
		home.editData(DeviceEdit.NAME, newName);
		// 6. Click "Save" link
		home.click(DeviceEdit.SAVE);
		/*
		 * The 640D Device Detail page is displayed with new information
		 */
		Assert.assertEquals(home.getTextByXpath(DeviceInfo.NAME), newName);
		// Delete device
		home.doDelete(DeviceInfo.DELETE);
	}
	
	/*
	 * Verify that the product's information is not changed when canceling editing product.
	 */
	@Test
	public void TC650DbADE_18(){
		result.addLog("ID : TC650DbADE_18 : Verify that the product's information is not changed when canceling editing product.");
		/*
		 	Pre-Condition: the DTS user has "Add and manage authorized Products" privilege.
			1. Log into DTS portal as a DTS admin user
			2. Navigate to "Apps & Devices" page
			3. Select a device in apps & devices table
			4.Click "Edit Version" link
			VP: The 650Db Device Edit page is displayed
			5. Change product's information
			6. Click "Cancel" link
		*/
		/*
		 * PreCondition: Create new device
		 */
		// Navigate to App & Devices page
		home.click(Xpath.LINK_APP_DEVICES);
		// Click Create new device link
		home.click(DeviceList.CREATE_NEW_DEVICE);
		// Create new device
		Hashtable<String,String> data = TestData.appDeviceDraft();
		home.createNewDevice(DeviceEdit.getHash(), data);
		/*
		 * *******************************************************
		 */
		// 2. Navigate to "Apps & Devices" page
		home.click(Xpath.LINK_APP_DEVICES);
		// 3. Select a device in apps & devices table 
		home.selectADeviceByName(data.get("name"));
		// 4. Click "Edit Version" link
		home.click(DeviceInfo.EDIT);
		/*
		 * VP: The 650Db Device Edit page is displayed
		 */
		Assert.assertEquals(home.existsElement(DeviceEdit.getHash()).getResult(), "Pass");
		// 5. Change product's information
		home.editData(DeviceEdit.NAME, "Edit" + RandomStringUtils.randomNumeric(6));
		// 6. Click "Cancel" link
		home.click(DeviceEdit.CANCEL);
		/*
		 * The portal is redirected to 640D Device Detail page and the product's information is not changed
		 */
		Assert.assertEquals(home.getTextByXpath(DeviceInfo.NAME), data.get("name"));
		// Delete device
		home.doDelete(DeviceInfo.DELETE);
	}
	
	/*
	 * Verify that items in audio route combobox is removed after uploading the custom tuning file.
	 */
	@Test
	public void TC650DbADE_19(){
		result.addLog("ID : TC650DbADE_19 : Verify that items in audio route combobox is removed after uploading the custom tuning file.");
		/*
		 	Pre-Condition: the DTS user has "Add and manage authorized Products" privilege.
			1. Log into DTS portal as a DTS admin user
			2. Navigate to "Apps & Devices" page
			3. Select a device in apps & devices table
			4. Click "Edit Version" link
			VP: The 650Db Device Edit page is displayed
			5. Select an item in audio route combobox
			6. Upload a tuning file for above audio route item successfully
			7. List out the audio route combobox
		*/
		/*
		 * PreCondition: Create new device
		 */
		// Navigate to App & Devices page
		home.click(Xpath.LINK_APP_DEVICES);
		// Click Create new device link
		home.click(DeviceList.CREATE_NEW_DEVICE);
		// Create new device
		Hashtable<String,String> data = TestData.appDeviceDraft();
		home.createNewDevice(DeviceEdit.getHash(), data);
		/*
		 * *******************************************************
		 */
		// 2. Navigate to "Apps & Devices" page
		home.click(Xpath.LINK_APP_DEVICES);
		// 3. Select a device in apps & devices table 
		home.selectADeviceByName(data.get("name"));
		// 4. Click "Edit Version" link
		home.click(DeviceInfo.EDIT);
		/*
		 * VP: The 650Db Device Edit page is displayed
		 */
		Assert.assertEquals(home.existsElement(DeviceEdit.getHash()).getResult(), "Pass");
		// 5. Select an item in audio route combobox
		home.selectOptionByName(DeviceEdit.AUDIO_ROUTE_TYPE, DeviceEdit.routes[3]);
		// 6. Upload a tuning file for above audio route item successfully
		home.uploadFile(DeviceEdit.ADD_CUSTOM_TUNING, Constant.AUDIO_ROUTE_FILE);
		// 7. List out the audio route combobox
		ArrayList<String> options = home.getAllComboboxOption(DeviceEdit.AUDIO_ROUTE_TYPE);
		/*
		 * The audio route item of uploaded tuning file is removed from audio route combobox
		 */
		Assert.assertTrue(!options.contains(DeviceEdit.routes[3]));
		// Delete device
		home.click(DeviceEdit.CANCEL);
		home.doDelete(DeviceInfo.DELETE);
	}
	
	/*
	 * Verify that the default audio route is required before publication
	 */
	@Test
	public void TC650DbADE_20(){
		result.addLog("ID : TC650DbADE_20 : Verify that the default audio route is required before publication");
		/*
		 	Pre-Condition: the DTS user has "Add and manage authorized Products" privilege.
			1. Log into DTS portal as a DTS admin
			2. Navigate to "Apps & Devices" page
			3. Click "Add App or Device" link
			VP: Verify that the 650Da Device New page is displayed
			4. Fill valid value into all required fields
			5. Do not upload default audio route tuning file
			6. Click "Save" link
			VP: The 640D Device Detail page is displayed and new product is saved successfully
			7. Click "Publish" link
		*/
		// 2. Navigate to "Apps & Devices" page
		home.click(Xpath.LINK_APP_DEVICES);
		// 3. Click "Add App or Device" link
		home.click(DeviceList.CREATE_NEW_DEVICE);
		/*
		 * VP: Verify that the 650Da Device New page is displayed
		 */
		Assert.assertEquals(home.existsElement(DeviceEdit.getHash()).getResult(), "Pass");
		// 4. Fill valid value into all required fields
		// 5. Do not upload default audio route tuning file
		// 6. Click "Save" link
		Hashtable<String,String> data = TestData.appDeviceDraft();
		ArrayList<String> dataDevice = home.createNewDevice(DeviceEdit.getHash(), data);
		/*
		 * VP: The 640D Device Detail page is displayed and new product is saved successfully
		 */
		Assert.assertTrue(DTSUtil.containsAll(data, dataDevice));
		// 7. Click "Publish" link
		home.click(DeviceInfo.PUBLISH);
		home.waitForElementClickable("//*[@href='javascript:;' and text() = 'OK']");
		/*
		 * The new product could not be published due to there is no default audio route tuning uploaded
		 */
		Assert.assertTrue(home.checkMessageDisplay("The Default Audio Route is required for all products"));
		// Delete device
		home.selectConfirmationDialogOption("OK");
		home.doDelete(DeviceInfo.DELETE);
	}
}
